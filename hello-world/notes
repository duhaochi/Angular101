3/5/2021
-------------
Introduction|
-------------

Angular Architectrue
    - Angular app - one ore more modules
    - Module - One or more components and services
    - Components - HTML + Class
    - Services - Vusiness logic
    - Modules interact and ultimately render the view in the browser


defult pakages 
    - package.json
        - things you need to run the service 
        - will dowload everthing for you

    - src folder
        - app.module.ts: is the main modul



3/7/2021
-------------
Components  |
-------------
https://www.youtube.com/watch?v=16rQyEQtpyQ&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=4

#to run the serve 
ng serve

#to create a new component
ng <generate> <components> <_name_>
ng g c test

There are three ways to delclare a selector 
1. 'app-name'
    <app-name></app-name>

2. '.app-name'
    <div class="app-name"></div>

3. '[app-test]'
    <div app-test></div>

_________________________
Inline template and style

use (`<code>`) to write html or css right in typescript

note:
    Any new component has to be imported and added to the module in the declarations array int app.module.ts
    this should already be done for you if you used the [ng g c _name_] command


--------------
INTERPOLATION|
--------------
https://www.youtube.com/watch?v=2a6OfacW_-I&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=6&ab_channel=Codevolution

#to declare a variable 
public _name_ = _value_

#string concatinate 
{{"Welcome " + _name_ }}



3/8/2021
----------------
Property Binding|
----------------
https://www.youtube.com/watch?v=N8FBmB2jme8&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=6

Attributes and properties are not the same
Attributes is defined by the HTML
Properties is defined by the Document Object Module

Attribute balues cannot be changed once they are initialized

so how can we do proberty binding in HTML from java scrip so that we have a dynamic data flow
hint: use []

examples:
<input [disabled]="true" [id]="id" type="text">
        ^                      ^
        |                      |_______here id is actrully a public var name created in class
        ----here disabled is one of the defult Attribute from the input tag, we are setting it to true, 

Another way to do the samething is to use "bind-<Attribute_name>": 
<input bind-disabled="is_disabled" [id]="id" type="text">
        ^
        |______this is the same as the one above just different sytext 


----------------
Class Binding  |
----------------
Youtube Tutorio
https://www.youtube.com/watch?v=Y6OP-lPJxgs&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=9&ab_channel=Codevolution
Official documentation
https://angular.io/guide/attribute-binding

{{{{regular class attribute becomes a dummy attribute in the presence of a class binding}}}
    - This is not true anymore in terms of the reacent updates of Angular, is good to know incase 
    software is running on old version of Angula

    <input class="text-success" bind-class="special_class" bind-disabled="is_disabled" type="text">
    - again you can use both classbinding and regular class="", both will work together

How to assign a class base on boolen values
<input [class.text-success]="false"  bind-disabled="is_disabled" type="text">
        ^                     ^
        |                     |
        |_____________________|_______now the class will depend on the boolen given, examples only set to true
                                        when the user have enterd the right input

How to conditionally apply multiple classes angular provides a method below
    <input [ngClass]="messageClasses"  bind-disabled="is_disabled" type="text">

    in TestComponent css
    public messageClasses = {
    "text-success": !this.is_disabled,
    "text-special": this.is_special,
    "text-fail": this.is_disabled
    }


--------------|
style Binding |
--------------|
Youtube Tutorio
https://www.youtube.com/watch?v=q256X6-u9Q8&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=8&ab_channel=Codevolution

bellow is how you do conditional statment in HTML
<h2 [style.color]="hasError ? 'red' : 'green'">Style Binding</h2>
- hasError is a variable declared in class

 <h2 [style.color]="highlight">Style Binding</h2>
 - highlight is a variable declared in class

binding a group of style created in class
  <h2 [style] = "titleStyles">Style Binding</h2>




--------------|
event Binding |
--------------|
Youtube Tutorio
https://www.youtube.com/watch?v=ZfIc1_oj7uM&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=9&ab_channel=Codevolution

respond to user event such as mouse and keyborad, lets make it interactive now!

 <button (click)="onClick"> OK </button>
 we can implemetn onClick in the class as a function like following
  onClick(){
    this.colors = "red"
  }


use $event as an input for the function to get all the information about that click
 <button (click)="onClick($event)"> OK </button>

 in the class you have to give event a type like following 
 onClick(event: Event){
    console.log(event)
    this.colors = "red"
  }
here I gived the event a type Event, there is another way to "fix" this but is not recommanded
https://stackoverflow.com/questions/44521323/angular2-parameter-event-implicitly-has-any-type


----------------------------|
Template Reference Variables|
----------------------------|
Youtube Tutorio
https://www.youtube.com/watch?v=Oo0-r_YhoJs&list=PLC3y8-rFHvwhBRAgFinJR8KHIrCdTkZcZ&index=11&ab_channel=Codevolution

<input #userInput type="text">
<button (click)="logMessage(userInput)">log</button>

in class
  onClick(event: string){
    console.log(event)
    this.titleStyles.color = "red"
  }